Links:
  http://en.wikipedia.org/wiki/Berkeley_sockets
  http://jmarshall.com/easy/http/
  http://beej.us/guide/bgnet/output/html/multipage/index.html

From StackOverflow.net
http://stackoverflow.com/questions/176409/how-to-build-a-simple-http-server-in-c

I'd recommend that you take a look at: A Practical Guide to Writing Clients and Servers

What you have to implement in incremental steps is:

   1. Get your basic TCP sockets layer running (listen on port/ports, accept client connections and send/receive data).
   2. Implement a buffered reader so that you can read requests one line (delimited by CRLF) at a time.
   3. Read the very first line. Parse out the method, the request version and the path.
   4. Implement generic header reader for the "Header: value" syntax. Don't forget unfolding folded headers.
   5. Check the request method, content type and content size to determine how/if the body will be read.
   6. Implement decoding of content based on content-type.
   7. If you're going to support HTTP 1.1, implement things like "100 Continue", keep-alive, chunked transfer.
   8. Add robustness/security measures like detecting incomplete requests, limiting max number of clients etc.
